{"ast":null,"code":"var _jsxFileName = \"/Users/shanthakumarpitta/Desktop/expensetracker-usereducercontextapi/src/Context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\"; //reducer function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n\n    case \"ADD_TRANSACTION\":\n      return { ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AppReducer;\nconst initialState = {\n  transactions: [{\n    id: 1,\n    text: \"Flowers\",\n    amount: -20\n  }, {\n    id: 2,\n    text: \"Salary\",\n    amount: 300\n  }, {\n    id: 3,\n    text: \"Books\",\n    amount: -25\n  }, {\n    id: 4,\n    text: \"Camera\",\n    amount: 500\n  }]\n}; //create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //provider component\n\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); //actions\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  };\n\n  const addTransaction = transaction => {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = GlobalProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/shanthakumarpitta/Desktop/expensetracker-usereducercontextapi/src/Context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","GlobalProvider","children","dispatch","deleteTransaction","addTransaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD,C,CAEA;;;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBC,MAAnB,CACXC,WAAD,IAAiBA,WAAW,CAACC,EAAZ,KAAmBL,MAAM,CAACM,OAD/B;AAFT,OAAP;;AAMF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELG,QAAAA,YAAY,EAAE,CAACF,MAAM,CAACM,OAAR,EAAiB,GAAGP,KAAK,CAACG,YAA1B;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD;;KAAMD,U;AAmBN,MAAMS,YAAY,GAAG;AACnBL,EAAAA,YAAY,EAAE,CACZ;AAAEG,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE,CAAC;AAAnC,GADY,EAEZ;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAFY,EAGZ;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,MAAM,EAAE,CAAC;AAAjC,GAHY,EAIZ;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAJY;AADK,CAArB,C,CAQA;;AACA,OAAO,MAAMC,aAAa,gBAAGd,aAAa,CAACW,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9C,QAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBhB,UAAU,CAACC,UAAD,EAAaS,YAAb,CAApC,CAD8C,CAG9C;;AACA,QAAMO,iBAAiB,GAAIT,EAAD,IAAQ;AAChCQ,IAAAA,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAE,oBAAR;AAA8BK,MAAAA,OAAO,EAAED;AAAvC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMU,cAAc,GAAIX,WAAD,IAAiB;AACtCS,IAAAA,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAE,iBAAR;AAA2BK,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,YAAY,EAAEH,KAAK,CAACG,YADf;AAELY,MAAAA,iBAFK;AAGLC,MAAAA;AAHK,KADT;AAAA,cAOGH;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBM;;GAAMD,c;;MAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\n//reducer function\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  transactions: [\n    { id: 1, text: \"Flowers\", amount: -20 },\n    { id: 2, text: \"Salary\", amount: 300 },\n    { id: 3, text: \"Books\", amount: -25 },\n    { id: 4, text: \"Camera\", amount: 500 },\n  ],\n};\n//create context\nexport const GlobalContext = createContext(initialState);\n\n//provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //actions\n  const deleteTransaction = (id) => {\n    dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\n  };\n\n  const addTransaction = (transaction) => {\n    dispatch({ type: \"ADD_TRANSACTION\", payload: transaction });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}